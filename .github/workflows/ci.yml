name: Unit testing, formatting & linting
on: [push]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Cache multiple paths
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: ${{ runner.os }}-3.11-${{ hashFiles('**/.pre-commit-config.yaml') }}
      - run: pip install pre-commit
      - run: pre-commit run -a

  testing-python:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        astor:
          - "0.7.0"
          - "0.8.0"
        python-version:
          - "3.7"
        experimental:
          - false
        # include:
        #   - python-version: "3.8"
        #     astor: "0.8.0"
        #     experimental: true
        #   - python-version: "3.9"
        #     astor: "0.8.0"
        #     experimental: true
        #   - python-version: "3.10"
        #     astor: "0.8.0"
        #     experimental: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache multiple paths
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.astor }}-${{ hashFiles('**/poetry.lock') }}
      - run: pip install poetry~=1.3.1
      - run: poetry install
      - run: poetry run pip install "astor~=${{ matrix.astor }}"
      - run: poetry run pytest -vv tests

  testing-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - "14"
          - "16"
          - "18"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"
      - run: yarn
      - run: yarn run build:test:js
      - run: yarn run code:format:check

  publish_package:
    runs-on: ubuntu-latest
    needs:
      - linting
      - testing-python
      - testing-node
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.7"
      - name: Cache multiple paths
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-3.7-${{ hashFiles('**/poetry.lock') }}
      - run: pip install poetry
      - run: poetry build
      # From https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi-and-testpypi
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
